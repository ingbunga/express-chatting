<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link href="https://fonts.googleapis.com/css2?family=Gothic+A1:wght@300&display=swap" rel="stylesheet">
    <style>
      *{
        font-family: 'Gothic A1', sans-serif;
      }
      html{
        height: 100%;
      }
      body {
        display: flex;

        width: 100%;
        height: 100%;
        margin: 0px;
        padding: 0px;

        align-items: center;
        justify-content: center;

        background-color: #474747;
      }
      .window{
        background-color: white;
        padding: 50px;
        box-shadow: 0px 0px 30px 5px black;
      }
      .input{
        border: 0.5px solid gray;
        border-radius: 3px;
      }
      .button{
        background-color: #00B7FF;
        color: white;
        transition: all 100ms;
        border-radius: 4px;
        margin-bottom: 5px;
        border: 0.5px solid gray;
      }
      .button:hover{
        background-color: dodgerblue;
      }
      .wide{
        box-sizing : border-box;
        width: 100%;
      }
    </style>
    <style>
      article{
        position: absolute;
        display: flex;
        visibility: hidden;

        width: 100%;
        height: 100%;
        top: 0px;
        left: 0px;

        opacity: 0;
        background-color: white;

        flex-direction: column;

        transition: opacity 350ms;
      }
      article.using{
        visibility: visible;
        opacity: 1;
      }
      .textInput{
        display: flex;
        height: 30px;
        margin: 5px;
      }
      #navbar{
        display: flex;
        justify-content: space-between;
        color: white;
        background-color: #00B7FF;
        height: 50px;
      }
      #chatting{
        width: 100%;
        list-style-type: none;
        padding-left: 14px;
      }
      #chatting > li{
        /*background-color: aquamarine;*/
      }
      .flexfill{
        display: flex;
        align-self: stretch;
        overflow-y: scroll;
        flex: 1;

        padding: 0px;
        margin: 0px;
      }
      .submit{
        box-sizing: border-box;
        height: 100%;
        width: 100px;
        margin-left: 5px;
      }
      #dropDownMenu{
        position: absolute;
        top: 50px;
        right: 0px;

        display: block;
        visibility: hidden;
        opacity: 0;

        background-color: #00B7FF;
        color: white;

        transition: opacity 100ms;
      }
      #dropDownMenu.fade{
        visibility: visible;
        opacity: 1;
      }
      #dropDownMenu > ul{
        list-style-type: none;
        padding-left: 5px;
        padding-right: 5px;
      }
    </style>
  </head>
  <body>
    <!-- 맨처음 닉네임 입력 -->
    <div class="window">
      <h1>채팅방 입장</h1>
      <div>
        <input type="text" placeholder="닉네임" class="wide input" id="nickname" >
      </div>
      <div style="margin-top:5px;">
        <button class="button wide" onclick="init()">입장하기</button>
      </div>
    </div>
    <!-- 여기서부터 채팅룸... -->
    <article>
      <!-- 네비게이션 바 -->
      <nav id="navbar">
        <h2 style="margin-left: 10px">welcome to chat room</h2>
        <img src="/images/whiteMenu.jpg" width="50px" onclick="onMenuClick(event)">
      </nav>
      <!-- 드롭다운 메뉴 -->
      <div id="dropDownMenu">
        <ul>
          <li onclick="nameChange(event)">닉네임 변경하기</li>
        </ul>
      </div>
      <!-- 채팅 영역 -->
      <div class="flexfill">
        <ul id="chatting"></ul>
      </div>
      <!-- 입력 영역 -->
      <div class="textInput">
        <input type="text" id="sendInput" class="wide">
        <button class="button submit" onclick="send()">전송</button>
      </div>
    </article>
    <!-- 여기서부터 스크립트 -->
    <script src="/socket.io/socket.io.js"></script>
    <script>
      let socket;
      let nickname = '';
      let domain = 'localhost';

      let sendText = document.querySelector('#sendInput');
      let chatArea = document.querySelector('article');
      let textLog = document.querySelector('#chatting');
      let textLogWrapper = document.querySelector('.flexfill');
      let dropDownMenu = document.querySelector('#dropDownMenu'); //드롭다운 메뉴

      // 방금 글쓴사람 구분.
      let beforeWriter = 'system'

      // 맨 처음 연결하는 코드
      function init(){
        socket = io.connect(`http://${domain}:3000/`);
        nickname = document.querySelector('#nickname').value;

        if(nickname === ''){
          alert('닉네임을 입력해주세요!');
          return;
        }
        socket.emit('handshake', {'nickname': nickname});
        chatArea.classList.add('using');

        socket.on('receive', data => {
          // if(beforeWriter === data.id){
          //   textLog.innerHTML += `<li><span>${data.sendText} - con</span></li>\n`
          // }else{
          //   textLog.innerHTML += `<li><hr></li>`
          // }
          textLog.innerHTML += `<li><span>${data.nickname} : ${data.sendText}</span></li>\n`
          beforeWriter = data.id
          textLogWrapper.scrollTop = textLogWrapper.scrollHeight - textLogWrapper.clientHeight;
        });

        socket.on('announce', data => {
          // textLog.innerHTML += `<li><hr></li>`
          textLog.innerHTML += `<li><span style="color:blue">${data}</span></li>\n`
          beforeWriter = 'system'
          textLog.scrollTop = textLog.scrollHeight - textLog.clientHeight;
        });

        socket.on('userList', data => {
          console.log(data);
        });
      }

      // 전송하는 코드
      function send(){
        if(sendText.value === ''){
          alert('빈 메세지는 보낼 수 없습니다!');
          return ;
        }
        socket.emit('send', {'sendText': sendText.value , 'id': socket.id});
        sendText.value = '';
      }

      // 채팅창 엔터 전송 이벤트
      sendText.addEventListener(`keypress`, ({key}) => {
        if(key === "Enter"){
          event.preventDefault();
          document.querySelector('button.button.submit').click();
        }
      });

      // 메뉴 클릭 이벤트
      function onMenuClick(e){
        e.preventDefault()
        dropDownMenu.classList.toggle('fade');
      }

      // 이름 변경 이벤트
      function nameChange(e){
        nickname = prompt('변경할 닉네임 입력');
        socket.emit('nameChange', nickname);
      }

    </script>
  </body>
</html>
